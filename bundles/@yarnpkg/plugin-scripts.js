/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-scripts",
factory: function (require) {
var plugin=(()=>{var p=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var n=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(r,o)=>(typeof require<"u"?require:r)[o]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var b=(t,r)=>{for(var o in r)p(t,o,{get:r[o],enumerable:!0})},j=(t,r,o,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of I(r))!P.call(t,i)&&i!==o&&p(t,i,{get:()=>r[i],enumerable:!(a=A(r,i))||a.enumerable});return t};var E=t=>j(p({},"__esModule",{value:!0}),t);var M={};b(M,{default:()=>D});var d=n("child_process"),c=(t,r,o)=>{var u;let a=(u=t.projectCwd)==null?void 0:u.endsWith(`dlx-${process.pid}`),i=t.get("scripts"),m=!!i[r]||!1,C=e=>(0,d.execSync)(e,{stdio:"inherit",cwd:t.projectCwd||void 0});try{if(!m&&o)throw new Error(`[yarn scripts] Script not found "${r}".`);i&&m&&!a&&i[r].forEach(y=>C(y))}catch(e){return(e==null?void 0:e.status)||1}return 0};var x=n("@yarnpkg/core"),f={scripts:{description:"Hook that will always run clean operations",type:x.SettingsType.ANY,default:""}};var g=n("@yarnpkg/core"),h=n("@yarnpkg/cli"),S=n("clipanion"),w=n("typanion");var s=class extends h.BaseCommand{constructor(){super(...arguments);this.script=S.Option.String({validator:(0,w.isString)()})}async execute(){let o=await g.Configuration.find(this.context.cwd,this.context.plugins);return c(o,this.script,!0)}};s.paths=[["scripts"]];var l=t=>c(t.configuration,"afterAllInstalled",!1);var k={configuration:f,commands:[s],hooks:{afterAllInstalled:l}},D=k;return E(M);})();
return plugin;
}
};
